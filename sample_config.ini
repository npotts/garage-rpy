#-*- coding: utf-8 -*-
# Copyright (c) 2015 Nick Potts 

[general]
# TCP Port to listen to for inquiries
tcp_port=5000

# How noisy to be
loglevel=0

# Which section to retrieve the ADC values from
adc_spi = mcp3008_adc

# What section to retrieve the GPIO settings that drive a relay to open/close
# get garage door.
open_close_switch = gpio_relay

[mcp3008_adc]
# what spidev port to open.  Between the spi_port and spi_ce, 
# it is implied top open /dev/spidev<spi_port>.<spi_ce>
# spidev_port=0, spidev_ce=0 implied opening /dev/spidev0.0
spidev_port=0
spidev_ce=0

# Which measurements modes to load.  Each mode should be attached to a single port
# On the ADC on.  Unit is configured for  single-ended input ONLY.  Sensors are defined 
# in their own sections as shown in the [sensor_prototype] section. Seperate multiple
# sensors measurments with a comma
sensors=temp,door

[sensor_prototype]
# Which A2D channel on the MCP3008/MCP3004 to use?  This will always be a single-ended input.
a2d_port=0

# Function to convert A2D counts to values.  cnt will be replaced with the ADC values
# this should be a valid python expression.  the Math library will be imported so functions
# like math.sin and math.log should be available.
count_to_value=cnt

# human readable name.  If missing, it will be set to the text in text in the header block
name = Prototype Entry

# A short Description.  If missing, it will be blank
description = A description of how to add extra sensors

# Max ADC count.  Values over this will be marked as "over value" and considered errors.  
# If missing, it will assume any positive number is ok
max = 1024

# Min ADC count.  Values under this will be marked as "under value" and considered error
# values.  If missing, it will assume to be zero
min = 0

#Units:  Volts, counts, etc, what ever you want
units=mV

[temp]
a2d_port = 1
count_to_value = 2.3434*math.log(cnt) - 20.00
name=Temperature (deg C)
description=Temperature of the Air
max=1024
min=0
units=C

[door]
a2d_port = 2
# A R Divider where R1 attaches to Vcc and R2 connects to Gnd: the value of R2 is 
# defined by cnt / bits * (R1+R2) where bits is the ADC resolution (1024 for MCP3008)
# and R1+R2 is total value of the pot (5K, 10K, etc)
count_to_value = cnt / 1024 * ( 5000 )
name=Door Position
description=Position of the Garage Door
max=1024
min=0
units=% Open


[gpio_relay]
# Which GPIO pin are we using to control the relay
pin = 15

# What should the idle state of the pin be.  Normally
# this should just remain to be low, but if you have
# a active low relay, you should set this to 1.
idle_state = 0

#How long to pulse the pin high/low (in seconds)
pulse= 0.500
